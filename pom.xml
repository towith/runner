<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>my</groupId>
  <artifactId>runner</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>runner</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <repack.dir.parent>D:\z_wd\gradle\usr\local\gradle-source-build\lib\</repack.dir.parent>
    <repack.target>${repack.dir.parent}/gradle-launcher-6.2.jar</repack.target>
    <repack.wkdir>${repack.dir.parent}/gradle-launcher-tmp</repack.wkdir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.glassfish.grizzly</groupId>
      <artifactId>grizzly-http-server</artifactId>
      <version>2.4.4</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>org/gradle/launcher/bootstrap/ProcessBootstrap.class</exclude>
            <exclude>org/gradle/launcher/bootstrap/</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>repack</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <!-- note that here we reference previously declared dependency -->
                <delete dir="${repack.wkdir}"/>
<!--                <copy file="${repack.dir.parent}/gradle-launcher-6.2 - Copy.jar" tofile="${repack.target}"/>-->
                <unzip src="${repack.dir.parent}/../gradle-launcher-6.2 - Copy.jar" dest="${repack.wkdir}-0"/>
                <!--                <unzip src="D:\z_wd\gradle\usr\local\gradle-source-build\lib\gradle-launcher-6.2.jar" dest="${project.build.directory}/tmp"/>-->
                <!-- now do what you need to any of unpacked files under target/tmp/ -->
                <!--                D:\z_wd\lab\runner\target\classes;
                ;;;-->
                <unzip src="C:\Users\bullflying\.m2\repository\org\glassfish\grizzly\grizzly-http-server\2.4.4\grizzly-http-server-2.4.4.jar"
                       dest="${project.build.directory}/1"/>
                <unzip src="C:\Users\bullflying\.m2\repository\org\glassfish\grizzly\grizzly-http\2.4.4\grizzly-http-2.4.4.jar"
                       dest="${project.build.directory}/2"/>
                <unzip src="C:\Users\bullflying\.m2\repository\org\glassfish\grizzly\grizzly-framework\2.4.4\grizzly-framework-2.4.4.jar"
                       dest="${project.build.directory}/3"/>

                <copydir src="${project.build.directory}/1" dest="${repack.wkdir}"/>
                <copydir src="${project.build.directory}/2" dest="${repack.wkdir}"/>
                <copydir src="${project.build.directory}/3" dest="${repack.wkdir}"/>
                <copydir src="${repack.wkdir}-0" dest="${repack.wkdir}" forceoverwrite="true"/>
                <copydir src="${project.build.directory}/classes" excludes="org/gradle/launcher/bootstrap/" dest="${repack.wkdir}" forceoverwrite="true"/>
                <!--                <copy file="D:\z_wd\lab\runner\target\classes\org\gradle\launcher\daemon\bootstrap\GradleDaemon.class"-->
                <!--                      todir="D:\z_wd\gradle\usr\local\gradle-source-build\lib\gradle-launcher-tmp\org\gradle\launcher\daemon\bootstrap"/>-->
                <zip basedir="${repack.wkdir}"
                     destfile="${repack.target}"/>
                <!-- now the modified jar is available  -->
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
